{"version":3,"sources":["component/AppController.js","module/core/CoreStyles.js","component/AppAlert.js","component/SideDrawer.js","component/SelectPopover.js","module/core/NavigationForm.js","component/SimpleForm.js","component/Spacer.js","module/core/LoginForm.js","module/core/HomeForm.js","component/SimpleTable.js","module/proforma/ProformaRequestForm.js","module/proforma/ProformaAppForm.js","module/core/CoreRouter.js","module/core/Viewport.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["AppController","Object","_Users_plukdevops_Documents_blitz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","global","window","appInstance","undefined","app","sharedInstance","useStyles","makeStyles","theme","spacing","switchField","padding","lookupDrawerList","width","lookupDrawerFullList","lookupIconButton","margin","color","red","lookupSearchField","marginRight","hiddenGridItem","display","root","dotbox","height","overflow","toolbar","paddingRight","toolbarIcon","objectSpread","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","concat","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","defineProperty","overflowX","breakpoints","up","appBarSpacer","content","container","paddingTop","paddingBottom","paper","flexDirection","paperCenter","fixedHeight","@global","body","backgroundColor","palette","common","white","avatar","secondary","main","form","marginTop","formControl","submit","loginmedia","bigAvatar","titlecard","maxWidth","titlecardmedia","previewFullHeight","AppAlert","_ref","_React$useState","type","React","useState","open","message","callback","_React$useState2","slicedToArray","state","setState","handleClose","flag","useEffect","setAlertHandle","alertState","setAppAlert","react_default","a","createElement","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","variant","autoFocus","SideDrawer","defaultState","getStyles","onRender","_useStateWithCallback","useStateWithCallback","lastState","sideHandle","_useStateWithCallback2","setSideHandle","close","Drawer","anchor","SelectPopover","classes","name","value","lastValue","label","selectedItem","selectedItems","multiSelect","selectedIDs","dataProvider","setPopoverTarget","setPopoverCancel","selectData","anchorEl","notSelected","selectedIDName","popSelectHandle","_useStateWithCallback3","lastSelectedIndex","document","target","getElementById","scrollIntoView","_useStateWithCallback4","selectedIndex","setSelectedIndex","delay","setPopSelectHandle","setValue","handleSelectItem","option","items","ids","i","push","checkSelected","index","Popover","anchorOrigin","vertical","horizontal","transformOrigin","className","noValidate","autoComplete","TextField","onChange","event","trim","fullWidth","onKeyDown","e","keyCode","nextStep","filter","toLowerCase","indexOf","length","preventDefault","InputProps","style","minWidth","getBoundingClientRect","getWidth","startAdornment","InputAdornment","IconButton","aria-label","RemoveCircleOutline_default","List","maxHeight","map","MenuItem","button","key","selected","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","assign","makeSelectedID","primary","NavigationForm","router","ListItem","history","Home_default","Divider","ListAlt_default","SimpleForm","formKey","control","mapping","formBag","makeKey","formRef","initConfig","_useState","_useState2","rendered","setRendered","lastRefresh","setRefresh","refresh","_useState3","_useState4","isSubmitting","setSubmitting","_useState5","_useState6","popoverTarget","_useState7","_useState8","popoverCancel","init","fields","field","disabled","visible","cmp","j","lastFiles","getForm","cacheFormFiles","files","_useStateWithCallback5","lastVisible","cacheFormVisibles","_useStateWithCallback6","setVisible","_useStateWithCallback7","lastDisabled","cacheFormDisabled","_useStateWithCallback8","setDisabled","_useStateWithCallback9","lastErrors","cacheFormErrors","_useStateWithCallback10","errors","setErrors","_useState9","_useState10","cacheDPData","_useState11","_useState12","checkDPData","_useStateWithCallback11","lastData","cacheSelectedData","_useStateWithCallback12","selectedData","setSelectedData","_useStateWithCallback13","lastValues","cacheFormValues","_useStateWithCallback14","values","setValues","_useState13","_useState14","dataMap","setDataMap","schema","Yup","shape","validateField","fieldName","formValues","getValues","formErrors","getErrors","validateSyncAt","validate","isValid","skipCascade","valid","isValidSync","console","log","getFormData","data","formData","FormData","json","JSON","stringify","append","file","findRawField","handleSearchFocus","handleOnPopoverOpen","pop","multiple","handleCheckBoxClick","isDisabled","handleFileUploadClick","click","handleClearErrors","handleValidate","handleChange","handleSubmit","onSubmit","getFormValues","records","selectedCache","getSelectedCache","setDisables","f","getDisabled","clr","emptyErrors","localErrors","handleClearSomeErrors","fns","getError","boxVisible","colorIcon","clearErrors","handleClearAllErrors","setVisibles","getVisibles","setVisibleField","show","setAllVisible","setDisabledField","disable","setAllDisabled","split","keys","x","selectIDs","setExternalValue","selectedID","selectedRow","getValue","reset","Array","isArray","getElementsByTagName","elements","addForm","ref","el","Grid","cls","InputLabelProps","shrink","grid","xs","selectField","selectProps","IconComponent","SearchIcon","renderValue","list","join","onOpen","searchValue","item","select","onBlur","error","helperText","onFocus","SelectProps","fileUploadField","accept","readOnly","endAdornment","disableFocusRipple","AttachFile_default","CheckBox_default","CheckBoxOutlineBlank_default","Switch","DatePicker","autoOk","InputAdornmentProps","date","handleDateChange","Input","inputComponent","reactTextMask_default","mask","placeholderChar","showMask","Typography","LinearProgress","buttons","clickEvent","Spacer","props","LoginForm","formName","useRef","enter","setEnter","createControl","isSubscribed","registerForm","unregisterForm","Slide","in","direction","Container","component","Card","CardContent","rule","username","string","required","password","formCtrl","service","post","email","p","success","setUser","result","alert","HomeForm","CardMedia","image","gutterBottom","CardActions","size","SimpleTable","tableKey","tableProps","columns","options","actions","showTitle","headerStyle","tableBag","tableIcons","Add","forwardRef","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Save","Save_default","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","AddBox","DeleteOutline","ChevronRight","SaveAlt","FilterList","ChevronLeft","ArrowUpward","Remove","setRefreshTable","refreshTable","tableRef","createRef","current","onQueryChange","addTable","dist_default","icons","ProformaRequestForm","mode","rowData","providers","status_id","CardHeader","action","download","ViewList_default","packinglistfile","deliveryaddress1","deliveryaddress2","deliveryaddress3","deliveryaddress4","deliveryaddress5","termsofdelivery","shipper","pickuplocation","remarks","statusProvider","vo","requestedon","moment","Date","format","upload","notice","info","ProformaAppForm","setStatusProvider","get","Paper","elevation","status","findTable","sm","side","sorting","pageSize","pageSizeOptions","paging","search","query","promise","resolve","reject","getSearchValues","prepQuery","prepResult","icon","tooltip","tableData","Assignment","ViewList","proforma_id","ask","reply","warning","onRowClick","togglePanel","CoreRouter","_this","classCallCheck","componentList","path","componentMap","isAuthenticated","Viewport","_React$useState3","_React$useState4","appDrawerIsOpen","setAppDrawerIsOpen","_React$useState5","_React$useState6","appIsAuthenticated","setAppIsAuthenticated","_React$useState7","role_id","_React$useState8","appUser","setAppUser","enqueueSnackbar","useSnackbar","pushNotice","autoHideDuration","disableWindowBlurListener","appProp","config","getInstance","getApp","setApp","forms","controlCache","stateCache","alertHandle","AddBoxIcon","AssignmentIcon","CheckIcon","ClearIcon","DeleteOutlineIcon","ChevronRightIcon","EditIcon","SaveAltIcon","FilterListIcon","FirstPageIcon","LastPageIcon","Menu","MenuIcon","PictureAsPdf","PictureAsPdfIcon","ChevronLeftIcon","SaveIcon","ArrowUpwardIcon","RemoveIcon","ViewColumnIcon","ViewListIcon","shortid","generate","_self","tables","visibles","currentStep","ctrl","setCurrentStep","setName","getComponent","splice","getForms","findForm","getTable","getTables","isVisible","setStateCache","getStateCache","handle","Promise","fetch","BASE_APP_PATH","then","res","method","cache","credentials","headers","Content-Type","redirect","referrer","Accept","Math","random","toString","substr","link","url","setAttribute","appendChild","removeChild","obj","page","start","limit","orderBy","sort","dir","orderDirection","toUpperCase","totalCount","total","user","cb","ms","setTimeout","encrypt","secret","CryptoJS","enc","Utf8","parse","iv","AES","CBC","pad","Pkcs7","CssBaseline","AppBar","clsx","Toolbar","Menu_default","noWrap","react_router_dom","react_router","getPaths","exact","rawTheme","createMuiTheme","light","dark","xLight","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontFamilySecondary","fontHeader","text","fontWeight","background","default","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","App","ThemeProvider","useUtils_cfb96ac9","utils","DateFnsUtils","build","maxSnack","Component","withStyles","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c75a96d.chunk.js","sourcesContent":["export default class AppController {\r\n    static sharedInstance = AppController.sharedInstance == null ? new AppController() : this.sharedInstance;\r\n\r\n    constructor(){\r\n        if(global && !global.AppController){\r\n            global.AppController = AppController;\r\n        }\r\n        if(window && !window.AppController){\r\n            window.AppController = AppController;\r\n        }\r\n        this.appInstance = undefined;\r\n    }\r\n\r\n    static getInstance(){\r\n        return AppController.sharedInstance;\r\n    }\r\n\r\n    setApp(app) {\r\n        this.appInstance = app;\r\n        return app;\r\n    }\r\n\r\n    getApp(){\r\n        return this.appInstance;\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) =>{ \r\n\r\n  return ({\r\n    spacing: 0,\r\n    switchField: {\r\n      padding: 0,\r\n    },    \r\n    lookupDrawerList: {\r\n      width: 250,\r\n    },\r\n    lookupDrawerFullList: {\r\n        width: 'auto',\r\n    },\r\n    lookupIconButton: {\r\n      padding: 0,\r\n      margin: 0,\r\n      color: red[800]\r\n    },\r\n    lookupSearchField: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    hiddenGridItem: {\r\n      display: 'none',\r\n    },     \r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    dotbox: {\r\n      width: '1px',\r\n      height: '1px',\r\n      overflow: 'hidden',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    paperCenter: {\r\n      padding: theme.spacing(1),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',    \r\n      alignItems: 'center'\r\n    }, \r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n    '@global': {\r\n      body: {\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main + ' !important',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },    \r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    loginmedia: {\r\n      height: 200,\r\n    },    \r\n    bigAvatar: {\r\n      margin: 10,\r\n      width: '300px !important',\r\n      height: '300px !important',\r\n    },    \r\n    titlecard: {\r\n      maxWidth: 500,  \r\n    },\r\n    titlecardmedia: {\r\n      height: 300,\r\n    },\r\n    previewFullHeight: {\r\n      height: '90vh',\r\n      display: 'inline-block',\r\n      margin: '0 auto'\r\n    }   \r\n  });\r\n});\r\n\r\nexport default useStyles;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function AppAlert({app, type}) {\r\n\r\n    const [state, setState] = React.useState({\r\n        open:false,\r\n        title:'Blitz',\r\n        message:'',\r\n        type:'ok',\r\n        callback: ()=>{}\r\n    });\r\n\r\n    const handleClose = (flag) => {\r\n        if(state.callback){\r\n            state.callback(flag);\r\n        }\r\n        setState({\r\n            title:'',\r\n            open:false,\r\n            message:'',\r\n            type:'ok',\r\n            callback: ()=>{}            \r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        app.setAlertHandle({\r\n            alertState:state,\r\n            setAppAlert:setState\r\n        });\r\n    },[]);\r\n\r\n    return (\r\n        <Dialog\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{state.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {state.message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          { state.type=='yesno' && <div><Button onClick={()=>{handleClose('yes')}} color=\"primary\" variant=\"contained\">Yes</Button> <Button onClick={()=>{handleClose('no')}} color=\"primary\" variant=\"contained\" autoFocus>No</Button></div> }\r\n          { state.type=='ok' && <Button onClick={()=>{handleClose('ok')}} color=\"primary\" variant=\"contained\" autoFocus>Ok</Button> }\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n\r\n}","import React, {useState, useEffect} from 'react';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nexport default function SideDrawer({app}) {\r\n    const classes = app.getStyles();\r\n\r\n    const defaultState = {\r\n        open: false,\r\n        onRender: null,\r\n        onClose: null\r\n    };\r\n\r\n    const [state, setState] = useStateWithCallback({...defaultState},(lastState)=>{\r\n        app.sideHandle.lastState = lastState;\r\n    });\r\n\r\n    const handleClose = () => {\r\n        if(app.sideHandle.lastState.onClose) app.sideHandle.lastState.onClose();\r\n        setState({...defaultState});\r\n    }\r\n\r\n    useEffect(()=>{\r\n        app.setSideHandle({\r\n            state:state,\r\n            lastState:state,\r\n            setState:setState,\r\n            close:handleClose\r\n        });      \r\n    },[]);    \r\n\r\n    return <div>\r\n        <Drawer anchor=\"right\" open={state.open} onClose={handleClose}>\r\n            {state.onRender && state.onRender()}            \r\n        </Drawer>\r\n    </div>;\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\n\r\nexport default function SelectPopover({app}) {\r\n    const classes = app.getStyles();\r\n\r\n    const defaultState = {\r\n        open: false,\r\n        type: '',\r\n        name: '',\r\n        value: '',\r\n        lastValue: '',\r\n        label: '',\r\n        selectedItem: null,\r\n        selectedItems: null,\r\n        multiSelect: false,\r\n        selectedIDs: {},\r\n        dataProvider: [],\r\n        setPopoverTarget: null,\r\n        setPopoverCancel: null,\r\n        selectData: null,\r\n        anchorEl: null,\r\n        spacing: 20\r\n    };\r\n\r\n    const notSelected = {};\r\n    const selectedIDName = {id:'popover-selected-item'};\r\n\r\n    const [state, setState] = useStateWithCallback({...defaultState}, (lastState) => {\r\n        app.popSelectHandle.state = lastState;\r\n    });\r\n    const [selectedIndex, setSelectedIndex] = useStateWithCallback(-1, (lastSelectedIndex) => {\r\n        if(lastSelectedIndex!=-1 && document){\r\n            var target = document.getElementById(selectedIDName.id);\r\n            if(target && target.scrollIntoView){\r\n                target.scrollIntoView();\r\n            }\r\n        }\r\n    });\r\n\r\n    const handleClose = () => {\r\n        if(state.setPopoverTarget){\r\n            state.setPopoverTarget('');\r\n        }\r\n        setSelectedIndex(-1);\r\n        setState({...defaultState, open:false, setPopoverCancel: state.setPopoverCancel});\r\n        app.delay(()=>{\r\n            if(state.setPopoverCancel)\r\n                state.setPopoverCancel(false);\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        app.setPopSelectHandle({\r\n            state:{...state},\r\n            setState:setState,\r\n            setSelectedIndex:setSelectedIndex,\r\n            handleClose:handleClose\r\n        });      \r\n    },[]);    \r\n    \r\n    const setValue = (value) => {\r\n        setState({ ...state, value: value });\r\n    }  \r\n    const handleChange = event => {\r\n        if(state.multiSelect){\r\n            setValue(event.target.value.trim());\r\n        }else{\r\n            setValue(event.target.value);\r\n        }\r\n        if(event.target.value!=''){\r\n            setSelectedIndex(0);\r\n        }else{\r\n            setSelectedIndex(-1);\r\n        }\r\n    };\r\n\r\n    const handleSelect = event => {\r\n        if(selectedIndex!=-1){\r\n            handleSelectItem(state.dataProvider.filter((option, index) => {\r\n                return (option.name.toLowerCase().indexOf(state.value.trim().toLowerCase())!=-1);\r\n            })[selectedIndex]);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = event => {\r\n        if(!state.multiSelect && selectedIndex!=-1){\r\n            handleSelectItem(state.dataProvider.filter((option, index) => {\r\n                return (option.name.toLowerCase().indexOf(state.value.trim().toLowerCase())!=-1);\r\n            })[selectedIndex]);\r\n        }        \r\n        state.setPopoverCancel(true);\r\n        handleClose();\r\n    };\r\n\r\n    const handleSelectItem = (option) => {\r\n        if(state.multiSelect){\r\n            if(option){\r\n                if(state.selectedIDs[option.id]){\r\n                    delete state.selectedIDs[option.id];\r\n                }else{\r\n                    state.selectedIDs[option.id] = option;\r\n                }\r\n                var items = [];\r\n                var ids = [];\r\n                for(var i in state.selectedIDs){\r\n                    items.push(state.selectedIDs[i]);\r\n                    ids.push(i);\r\n                }\r\n                setState({\r\n                    ...state,\r\n                    value: state.value,\r\n                    selectedItem: option,\r\n                    selectedItems: items,\r\n                    selectedIDs: state.selectedIDs\r\n                });\r\n                state.selectData(state.name, ids, state.multiSelect);\r\n            }\r\n        }else{\r\n            if(option){\r\n                setState({\r\n                    ...state,\r\n                    value: option.id,\r\n                    selectedItem: option,\r\n                    selectedItems: null\r\n                });\r\n                state.selectData(state.name, [option]);\r\n            }\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    const clearSelectedItem = () => {\r\n        setState({\r\n            ...state,\r\n            value: '',\r\n            lastValue: '',\r\n            selectedIDs: {},\r\n            selectedItem: null,\r\n            selectedItems: null\r\n        });\r\n        setSelectedIndex(-1);\r\n        state.selectData(state.name, [], state.multiSelect);\r\n        state.setPopoverCancel(true);\r\n        handleClose();\r\n    };\r\n\r\n    const checkSelected = (option, index) => {\r\n        if(selectedIndex==-1){\r\n            if(option.id==state.lastValue){\r\n                setSelectedIndex(index);\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            return selectedIndex==index;\r\n        }\r\n    }\r\n\r\n    const makeSelectedID = (option, index) => {\r\n        if(checkSelected(option, index)){\r\n            return selectedIDName;\r\n        }else{\r\n            return notSelected;\r\n        }\r\n    }    \r\n\r\n    const getWidth = () => {\r\n        var minWidth = {};\r\n        if(state.anchorEl && state.anchorEl.getBoundingClientRect){\r\n            minWidth.minWidth = state.anchorEl.getBoundingClientRect().width - (defaultState.spacing);\r\n        }\r\n        return minWidth\r\n    }\r\n\r\n    return <div>\r\n      <Popover\r\n        id=\"popover-search\"\r\n        open={state.open}\r\n        anchorEl={state.anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >        \r\n        <div>\r\n            <form className={classes.paper} noValidate autoComplete=\"off\">\r\n            <TextField \r\n                id=\"popover-search\" \r\n                value={state.value}\r\n                label={state.label} \r\n                autoComplete=\"off\" \r\n                onChange={handleChange}\r\n                fullWidth \r\n                autoFocus\r\n                onKeyDown={(e) => {\r\n                    if(e.keyCode === 37){ //left\r\n                    }else if(e.keyCode === 39) { //right\r\n                    }else if(e.keyCode === 38) { //up\r\n                        var nextStep = selectedIndex-1;\r\n                        if(nextStep>=0){\r\n                            setSelectedIndex(nextStep);\r\n                        }\r\n                    }else if(e.keyCode === 40) { //down\r\n                        var nextStep = selectedIndex+1;\r\n                        var length = state.dataProvider.filter((option, index) => {\r\n                            return (option.name.toLowerCase().indexOf(state.value.trim().toLowerCase())!=-1);\r\n                        }).length;\r\n                        if(nextStep<length){\r\n                            setSelectedIndex(nextStep);\r\n                        }\r\n                    }else if(e.keyCode === 32) { //space\r\n                        if(state.multiSelect){\r\n                            handleSelect(e);\r\n                            e.preventDefault();\r\n                        }\r\n                    }else if(e.keyCode === 13) { //enter\r\n                        handleSubmit(e);\r\n                    }\r\n                  }}\r\n                InputProps={{\r\n                    style: getWidth(),\r\n                    startAdornment:<InputAdornment position=\"start\">\r\n                        <IconButton className={classes.lookupIconButton} aria-label=\"Clear Selected\" onClick={clearSelectedItem}>\r\n                            <RemoveCircleOutlineIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n            />\r\n            </form>\r\n            <List style={{maxHeight: 200, overflow: 'auto'}}>\r\n                {\r\n                    state.dataProvider.filter((option, index) => {\r\n                        return (option.name.toLowerCase().indexOf(state.value.trim().toLowerCase())!=-1);\r\n                    }).map((option, index) => {\r\n                        return <MenuItem button key={option.id}\r\n                            selected={checkSelected(option, index)}\r\n                            onClick={()=>{\r\n                                handleSelectItem(option);\r\n                            }}>\r\n                            {\r\n                                state.multiSelect &&\r\n                                <ListItemIcon>\r\n                                <Checkbox\r\n                                  edge=\"start\"\r\n                                  checked={state.selectedIDs[option.id]!=undefined}\r\n                                  tabIndex={-1}\r\n                                  disableRipple\r\n                                  inputProps={{ 'aria-labelledby': option.id }}\r\n                                />\r\n                              </ListItemIcon>                                \r\n                            }\r\n                            <ListItemText {...makeSelectedID(option, index)} primary={option.name} />\r\n                        </MenuItem>\r\n                    })\r\n                }                \r\n            </List>\r\n        </div>\r\n        </Popover>\r\n    </div>;\r\n}\r\n","import React from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default function NavigationForm({ app, router }) {\r\n  const classes = app.getStyles();\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={e => {\r\n            router.history.push('/');\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Home' />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem\r\n          button\r\n          onClick={e => {\r\n            router.history.push('/proforma/list');\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <ListAltIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Approve Posts' />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport MaskedInput from 'react-text-mask';\r\nimport {\r\n  LinearProgress,\r\n  MenuItem,\r\n  TextField,\r\n  Input,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Divider,\r\n  InputLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Switch,\r\n  Checkbox,\r\n  InputAdornment,\r\n  IconButton,\r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport ToggleOffIcon from '@material-ui/icons/ToggleOff';\r\nimport ToggleOnIcon from '@material-ui/icons/ToggleOn';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nimport * as Yup from 'yup';\r\n\r\nexport default function SimpleForm({app, name, formKey, control, mapping, state, setState}) {\r\n    const classes = app.getStyles();\r\n    const formBag = {\r\n        name:name,\r\n        formKey:(formKey) ? formKey: app.makeKey(),\r\n        formRef:undefined,\r\n        initConfig:{}\r\n    };\r\n\r\n    const [rendered, setRendered] = useState(false);\r\n    const [refresh, setRefresh] = useStateWithCallback(true,(lastRefresh)=>{\r\n        if(lastRefresh==false){\r\n            setRefresh(true);\r\n        }\r\n    });\r\n    \r\n    const [isSubmitting, setSubmitting] = useState(false); \r\n    const [popoverTarget, setPopoverTarget] = useState('');\r\n    const [popoverCancel, setPopoverCancel] = useState(false);\r\n\r\n    const init = (type) => {\r\n        if(formBag.initConfig[type]){\r\n            return formBag.initConfig[type];\r\n        }\r\n\r\n        formBag.initConfig['errors'] = {};\r\n        formBag.initConfig['cacheDPData'] = {};\r\n        formBag.initConfig['checkDPData'] = {};\r\n        formBag.initConfig['selectedData'] = {};\r\n        formBag.initConfig['values'] = {};\r\n        formBag.initConfig['visibles'] = {};\r\n        formBag.initConfig['dataMap'] = {};\r\n        formBag.initConfig['disabled'] = {};\r\n        formBag.initConfig['files'] = {};\r\n\r\n        for(var i=0;i<mapping.fields.length;i++){\r\n            var field = mapping.fields[i];\r\n            formBag.initConfig['errors'][field.name] = '';\r\n            formBag.initConfig['disabled'][field.name] = (field.disabled) ? true:false;\r\n            formBag.initConfig['visibles'][field.name] = (field.visible==false) ? false:true;\r\n            if(field.cmp==='search'){\r\n                formBag.initConfig['cacheDPData'][field.name] = field;\r\n                formBag.initConfig['selectedData'][field.name] = [];\r\n            }else if(field.cmp==='checkbox' || field.cmp==='toggle'){\r\n                formBag.initConfig['checkDPData'][field.name] = field.dataProvider;\r\n            }else if(field.cmp=='fileupload'){\r\n                formBag.initConfig['files'][field.name] = field.name+'-file';\r\n            }\r\n            if(state){\r\n                if(!state[field.name]) state[field.name] = (field.value) ? field.value:'';\r\n            }else{\r\n                formBag.initConfig['values'][field.name] = (field.value) ? field.value:'';\r\n            }\r\n            if(field.dataProvider && field.dataProvider.length>0 && field.dataProvider[0].id){\r\n                formBag.initConfig['dataMap'][field.name] = {};\r\n                for(var j=0;j<field.dataProvider.length;j++){\r\n                    var option = field.dataProvider[j];\r\n                    formBag.initConfig['dataMap'][field.name][option.id] = option.name;\r\n                }\r\n            }            \r\n        }\r\n        if(state) formBag.initConfig['values'] = state;\r\n        return formBag.initConfig[type];\r\n    }\r\n\r\n    const [files, setFiles] = useStateWithCallback(()=>{\r\n        return init('files');\r\n    },(lastFiles)=>{\r\n        if(rendered){\r\n            app.getForm(name).cacheFormFiles(formBag.formKey, lastFiles);\r\n        }\r\n    });\r\n\r\n    const [visible, setVisible] = useStateWithCallback(()=>{\r\n        return init('visibles');\r\n    },(lastVisible)=>{\r\n        if(rendered){\r\n            app.getForm(name).cacheFormVisibles(formBag.formKey, lastVisible);\r\n        }\r\n    });\r\n\r\n    const [disabled, setDisabled] = useStateWithCallback(()=>{\r\n        return init('disabled');\r\n    },(lastDisabled)=>{\r\n        if(rendered){\r\n            app.getForm(name).cacheFormDisabled(formBag.formKey, lastDisabled);\r\n        }\r\n    }); \r\n\r\n    const [errors, setErrors] = useStateWithCallback(()=>{\r\n        return init('errors');\r\n    },(lastErrors)=>{\r\n        if(rendered){\r\n            app.getForm(name).cacheFormErrors(formBag.formKey, lastErrors);\r\n        }\r\n    }); \r\n\r\n    const [cacheDPData, setCacheDPData] = useState(()=>{\r\n        return init('cacheDPData');\r\n    });\r\n\r\n    const [checkDPData, setCheckDPData] = useState(()=>{\r\n        return init('checkDPData');\r\n    });    \r\n\r\n    const [selectedData, setSelectedData] = useStateWithCallback(()=>{\r\n        return init('selectedData');\r\n    },(lastData)=>{\r\n        if(rendered){\r\n            app.getForm(name).cacheSelectedData(formBag.formKey, lastData);\r\n        }\r\n    });  \r\n\r\n    const [values, setValues] = useStateWithCallback(() => {\r\n        return init('values');\r\n    },(lastValues)=>{\r\n        if(rendered){\r\n            app.getForm(name).cacheFormValues(formBag.formKey, lastValues);\r\n            if(setState) setState(lastValues);\r\n        }\r\n    }); \r\n\r\n    const [dataMap, setDataMap] = useState(() => {\r\n        return init('dataMap');\r\n    });    \r\n\r\n    if(mapping.schema){\r\n        formBag.schema = Yup.object().shape(mapping.schema(Yup));\r\n    }else{\r\n        formBag.schema = Yup.object().shape({});\r\n    }\r\n    formBag.validateField = (fieldName, event) => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        var formErrors = app.getForm(name).getErrors(formBag.formKey);\r\n        try{\r\n            formBag.schema.validateSyncAt(fieldName, {[fieldName]:formValues[fieldName]});\r\n            setErrors({...formErrors, [fieldName]:''});\r\n        }catch(e){\r\n            setErrors({...formErrors, [fieldName]:e.message});\r\n        }\r\n    };\r\n    formBag.validate = (event) => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        var formErrors = app.getForm(name).getErrors(formBag.formKey);\r\n        for(var i in formValues){\r\n            try{\r\n                formBag.schema.validateSyncAt(i, {[i]:formValues[i]});\r\n                formErrors[i] = '';\r\n            }catch(e){\r\n                if(e.message.indexOf('The schema does not contain')==-1){\r\n                    formErrors[i] = e.message;\r\n                }\r\n            }\r\n        }\r\n        setErrors({...formErrors});\r\n    };    \r\n    formBag.isValid = (skipCascade) => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        var valid = formBag.schema.isValidSync(formValues);\r\n        if(!skipCascade){\r\n            try{\r\n                formBag.validate();\r\n            }catch(e){\r\n                console.log('errors',e);\r\n            }\r\n        }\r\n        return valid;\r\n    };\r\n    formBag.getFormData = (data) => {\r\n        var formData = new FormData();\r\n        var json = JSON.stringify(data);\r\n        formData.append('data', json);\r\n        for(var i in files){\r\n            var file = formBag.findRawField(files[i]);\r\n            if(file.files.length>0)\r\n                formData.append(i, file.files[0]);\r\n        }\r\n        return formData;\r\n    }\r\n    formBag.isSubmitting = isSubmitting;\r\n    formBag.setSubmitting = setSubmitting;\r\n    formBag.setDataMap = setDataMap;\r\n    formBag.dataMap = dataMap;\r\n\r\n    const handleSearchFocus = (field) => event => {\r\n        /*if(values[field.name]=='' && popoverTarget=='' && app.popSelectHandle && !app.popSelectHandle.open){\r\n            handleOnPopoverOpen(field, event);\r\n            setErrors({...errors, [field.name]:''});\r\n        }else{\r\n            if(app.popSelectHandle && app.popSelectHandle.handleClose){\r\n                app.popSelectHandle.handleClose();\r\n            }\r\n        }*/\r\n        setErrors({...errors, [field.name]:''});\r\n    };\r\n\r\n    const handleOnPopoverOpen = (field, event) => {\r\n        if(!popoverCancel){\r\n            setPopoverTarget(field.name); \r\n            setErrors({...errors, [field.name]:''}); \r\n            app.pop(\r\n                'lookup', \r\n                field.name, \r\n                field.label,\r\n                values[field.name], \r\n                field.dataProvider, \r\n                setPopoverTarget,\r\n                setPopoverCancel,\r\n                selectData,\r\n                field.multiple,\r\n                dataMap[field.name],\r\n                event.target\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleFileUploadChange = (fieldName) => event => {\r\n        if(event.target.value && values[fieldName]==''){\r\n            setValue(fieldName,event.target.value);\r\n        }\r\n    };\r\n\r\n    const handleCheckBoxClick = (fieldName) => event => {\r\n        console.log(fieldName,event,event.target.checked);\r\n        if(isDisabled(fieldName)) return;\r\n        if(values[fieldName]=='') values[fieldName] = checkDPData[fieldName][0].id;\r\n        if(event.target.checked){\r\n            setValue(fieldName,checkDPData[fieldName][1].id);\r\n        }else{\r\n            setValue(fieldName,checkDPData[fieldName][0].id);\r\n        }\r\n    };\r\n\r\n    const handleFileUploadClick = (fieldName) => event => {\r\n        if(isDisabled(fieldName)) return;\r\n        var hiddenFileField = formBag.findRawField(fieldName+'-file');\r\n        hiddenFileField.click();\r\n    };\r\n\r\n    const handleClearErrors = (fieldName) => event => {\r\n        setErrors({...errors, [fieldName]:''});\r\n    };\r\n    const handleClearAllErrors = () => {\r\n        var emptyErrors = {};\r\n        var localErrors = formBag.initConfig['errors'];\r\n        for(var i in localErrors){\r\n            emptyErrors[i] = '';\r\n        }\r\n        setErrors(emptyErrors);\r\n    };\r\n    const handleClearSomeErrors = (data) => {\r\n        var emptyErrors = {};\r\n        var localErrors = formBag.initConfig['errors'];\r\n        for(var i in localErrors){\r\n            if(data[i])\r\n                emptyErrors[i] = '';\r\n        }\r\n        setErrors(emptyErrors);\r\n    };\r\n    const validateField = (form, fieldName, event) => {\r\n        if(popoverTarget!=fieldName)\r\n            form.validateField(fieldName, event);\r\n    };\r\n    const handleValidate = (form,fieldName) => event => {\r\n        validateField(form, fieldName, event);\r\n    };\r\n    const setValue = (fieldName, value) => {\r\n        setValues({ ...values, [fieldName]: value });\r\n    }\r\n    const handleDateChange = (fieldName, date) => {\r\n        console.log(fieldName, date);\r\n        setValue(fieldName, date);\r\n    }\r\n    const handleChange = fieldName => event => {\r\n        setValue(fieldName, event.target.value);\r\n    };\r\n    const handleSwitchChange = fieldName => event => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        setValue(fieldName, !formValues[fieldName]);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        if(mapping.onSubmit){\r\n            setSubmitting(true);\r\n            mapping.onSubmit(app.getForm(name).getFormValues(formBag.formKey), formBag);\r\n        }\r\n    };\r\n    const selectData = (fieldName, records, multiple) => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        var selectedCache = app.getForm(name).getSelectedCache(formBag.formKey);\r\n        if(multiple){\r\n            if(records.length>0){\r\n                setValues({ ...formValues, [fieldName]: records });\r\n                setSelectedData({...selectedCache, [fieldName]:records});\r\n            }else{\r\n                setValues({ ...formValues, [fieldName]: [] });\r\n                setSelectedData({...selectedCache, [fieldName]:[]});\r\n            }\r\n        }else{\r\n            if(records.length>0){\r\n                setValues({ ...formValues, [fieldName]: records[0].id });\r\n                setSelectedData({...selectedCache, [fieldName]:records});\r\n            }else{\r\n                setValues({ ...formValues, [fieldName]: '' });\r\n                setSelectedData({...selectedCache, [fieldName]:[]});\r\n            }\r\n        }\r\n    };\r\n    const setVisibleField = (fieldName, flag) => {\r\n        setVisible({ ...(app.getForm(name).getVisibles(formBag.formKey)), [fieldName]: flag });\r\n    }\r\n    const setVisibles = (f) => {\r\n        var data = app.getForm(name).getVisibles(formBag.formKey);\r\n        var clr = {};\r\n        for(var i in f){\r\n            data[i] = f[i];\r\n            if(f[i]==true){\r\n                clr[i] = '';\r\n            }\r\n        }\r\n        setVisible(data);\r\n    }\r\n    const setAllVisible = (flag) => {\r\n        var data = app.getForm(name).getVisibles(formBag.formKey);\r\n        for(var i in data){\r\n            data[i] = flag;\r\n        }\r\n        setVisible(data);\r\n    }\r\n    const setDisabledField = (fieldName, flag) => {\r\n        setDisabled({ ...(app.getForm(name).getDisabled(formBag.formKey)), [fieldName]: flag });\r\n    }\r\n    const setDisables = (f) => {\r\n        var data = app.getForm(name).getDisabled(formBag.formKey);\r\n        var clr = {};\r\n        for(var i in f){\r\n            data[i] = f[i];\r\n            if(f[i]==true){\r\n                clr[i] = '';\r\n            }\r\n        }\r\n        setDisabled(data);\r\n        handleClearSomeErrors(clr);\r\n    }\r\n    const setAllDisabled = (flag) => {\r\n        var data = app.getForm(name).getDisabled(formBag.formKey);\r\n        for(var i in data){\r\n            data[i] = flag;\r\n        }\r\n        setDisabled(data);\r\n    }\r\n    const setExternalValue = (fieldName, value) => {\r\n        if(cacheDPData[fieldName]){\r\n            var field = cacheDPData[fieldName];\r\n            if(field.multiple){\r\n                var ids = value.split(',');\r\n                var keys = {};\r\n                for(var x=0;x<ids.length;x++){\r\n                    keys[ids[x].trim()] = true;\r\n                }\r\n                var selectIDs = [];\r\n                for(var i=0;i<field.dataProvider.length;i++){\r\n                    if(keys[field.dataProvider[i].id]){\r\n                        selectIDs.push(field.dataProvider[i].id);\r\n                    }\r\n                }\r\n                return selectData(fieldName, selectIDs, true);\r\n            }else{\r\n                for(var i=0;i<field.dataProvider.length;i++){\r\n                    if(field.dataProvider[i].id==value){\r\n                        return selectData(fieldName, [field.dataProvider[i]], false);\r\n                    }\r\n                }\r\n            }\r\n        }else{        \r\n            setValues({ ...(app.getForm(name).getValues(formBag.formKey)), [fieldName]: value });\r\n        }\r\n    };\r\n    const fns = (key) => {\r\n        return name+'-'+formKey+'-'+key;\r\n    };\r\n\r\n    const getError = (fieldName) => {\r\n        if(app.getForm(name)) return app.getForm(name).getError(formBag.formKey,fieldName);\r\n    };    \r\n    const isDisabled = (fieldName) => {\r\n        if(app.getForm(name)) return app.getForm(name).isDisabled(formBag.formKey,fieldName);\r\n    };\r\n    const isVisible = (fieldName) => {\r\n        if(app.getForm(name)) return app.getForm(name).isVisible(formBag.formKey,fieldName);\r\n    };\r\n    const boxVisible = (fieldName) => {\r\n        return visible[fieldName]==false ? classes.hiddenGridItem:{};\r\n    };\r\n    const colorIcon = (fieldName, color) => {\r\n        if(isDisabled(fieldName)){\r\n            return 'disabled';\r\n        }else{\r\n            return color;\r\n        }\r\n    };\r\n\r\n    formBag.refresh = () => {\r\n        setRefresh(false);\r\n    };\r\n    formBag.clearErrors = () => {\r\n        handleClearAllErrors();\r\n    };\r\n    formBag.setVisibles = (data) => {\r\n        setVisibles(data);\r\n    };\r\n    formBag.setVisible = (fieldName, flag) => {\r\n        setVisibleField(fieldName, flag);\r\n    };\r\n    formBag.show = (flag) => {\r\n        setAllVisible(flag);\r\n    };\r\n    formBag.setDisables = (data) => {\r\n        setDisables(data);\r\n    };\r\n    formBag.setDisabled = (fieldName, flag) => {\r\n        setDisabledField(fieldName, flag);\r\n    };\r\n    formBag.disable = (flag) => {\r\n        setAllDisabled(flag);\r\n    };\r\n    formBag.setValue = (fieldName, value) => {\r\n        setExternalValue(fieldName, value);\r\n    };\r\n    formBag.setValues = (data) => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        var selectedCache = app.getForm(name).getSelectedCache(formBag.formKey);\r\n        \r\n        for(var fieldName in data){\r\n            if(formValues[fieldName]!=undefined){\r\n                if(cacheDPData[fieldName]){\r\n                    var field = cacheDPData[fieldName];\r\n                    if(field.multiple){\r\n                        var ids = data[fieldName].split(',');\r\n                        var keys = {};\r\n                        for(var x=0;x<ids.length;x++){\r\n                            keys[ids[x].trim()] = true;\r\n                        }\r\n                        var selectIDs = [];\r\n                        for(var i=0;i<field.dataProvider.length;i++){\r\n                            if(keys[field.dataProvider[i].id]){\r\n                                selectIDs.push(field.dataProvider[i].id);\r\n                            }\r\n                        }\r\n                        if(selectIDs.length>0){\r\n                            formValues[fieldName] = selectIDs;\r\n                            selectedCache[fieldName] = selectIDs;\r\n                        }else{\r\n                            formValues[fieldName] = [];\r\n                            selectedCache[fieldName] = [];\r\n                        }\r\n                    }else{\r\n                        var selectedID = '';\r\n                        var selectedRow = [];\r\n                        for(var i=0;i<field.dataProvider.length;i++){\r\n                            if(field.dataProvider[i].id==data[fieldName]){\r\n                                selectedID = field.dataProvider[i].id;\r\n                                selectedRow = [field.dataProvider[i]];\r\n                                break;\r\n                            }\r\n                        }\r\n                        formValues[fieldName] = selectedID;\r\n                        selectedCache[fieldName] = selectedRow;\r\n                    }\r\n                }else{\r\n                    formValues[fieldName] = data[fieldName];\r\n                }\r\n            }\r\n        }\r\n        setValues({ ...formValues});\r\n        setSelectedData({...selectedCache});\r\n\r\n    };  \r\n    formBag.getValue = (fieldName) => {\r\n        return app.getForm(name).getValues(formBag.formKey)[fieldName];\r\n    };\r\n    formBag.getValues = () => {\r\n        return app.getForm(name).getValues(formBag.formKey);\r\n    };\r\n    formBag.reset = () => {\r\n        var formValues = app.getForm(name).getValues(formBag.formKey);\r\n        for(var i in formValues){\r\n            if(Array.isArray(formValues[i])){\r\n                formValues[i] = [];\r\n            }else{\r\n                formValues[i] = '';\r\n            }\r\n        }\r\n        setValues({...formValues});\r\n    };\r\n    formBag.submit = () => {\r\n        handleSubmit();\r\n    };\r\n    formBag.findRawField = (fieldName) => {\r\n        if(formBag.formRef && formBag.formRef.getElementsByTagName){\r\n            var elements = formBag.formRef.getElementsByTagName('input');\r\n            for(var i=0;i<elements.length;i++){\r\n                if(elements[i].name==fieldName){\r\n                    return elements[i];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setRendered(true);\r\n        control.addForm(formBag);\r\n        return () => {\r\n        }\r\n    },[]);\r\n\r\n    return <form ref={(el) => (el) ? formBag.formRef = el : null}onSubmit={(event)=>{ event.preventDefault(); handleSubmit(event); }} noValidate autoComplete=\"off\">\r\n            {refresh &&\r\n            <Grid container spacing={2}>\r\n                {\r\n                    mapping.fields && mapping.fields.map((field, index) => {\r\n                        field.className = classes[field.cls];\r\n                        field.autoComplete = 'off'\r\n                        if(!field.variant){\r\n                            field.variant = 'standard';\r\n                        }\r\n                        if(field.fullWidth==undefined) field.fullWidth = true;\r\n                        if(field.type=='date' || field.type=='time' || field.type=='datetime-local' || field.type=='datetime'){\r\n                            field.InputLabelProps={\r\n                                shrink: true\r\n                            };\r\n                        }\r\n                        if(!field.grid){\r\n                            field.grid = {xs:12};\r\n                        }\r\n                        if(!field.grid.xs){\r\n                            field.grid.xs = 12;\r\n                        }\r\n                        if(field.cmp=='search'){\r\n                            var selectField = {...field};\r\n                            delete selectField.multiple;\r\n                            delete selectField.dataProvider;\r\n\r\n                            var selectProps = null;\r\n                            if(field.multiple){\r\n                                selectProps = {\r\n                                    open:false,\r\n                                    multiple: (field.multiple) ? true:false,\r\n                                    IconComponent:SearchIcon,\r\n                                    renderValue:(selected) => {\r\n                                        var list = [];\r\n                                        for(var i=0;i<selected.length;i++){\r\n                                            list.push(dataMap[field.name][selected[i]]);\r\n                                        }\r\n                                        return list.join(', ');\r\n                                    },\r\n                                    onOpen:(event)=>{\r\n                                        handleOnPopoverOpen(field, event);\r\n                                    }                                       \r\n                                };\r\n                            }else{\r\n                                selectProps = {\r\n                                    open:false,\r\n                                    multiple: false,\r\n                                    IconComponent:SearchIcon,\r\n                                    onOpen:(event)=>{\r\n                                        handleOnPopoverOpen(field, event);\r\n                                    }                                       \r\n                                };\r\n                            }\r\n\r\n                            var searchValue = undefined;\r\n                            if(cacheDPData[field.name]){\r\n                                if(field.multiple){\r\n                                    var ids = searchValue.split(',');\r\n                                    var keys = {};\r\n                                    for(var x=0;x<ids.length;x++){\r\n                                        keys[ids[x].trim()] = true;\r\n                                    }\r\n                                    var selectIDs = [];\r\n                                    for(var i=0;i<field.dataProvider.length;i++){\r\n                                        if(keys[field.dataProvider[i].id]){\r\n                                            selectIDs.push(field.dataProvider[i].id);\r\n                                        }\r\n                                    }\r\n                                    if(selectIDs.length>0){\r\n                                        searchValue = selectIDs;\r\n                                        selectedData[field.name] = selectIDs;\r\n                                    }else{\r\n                                        searchValue = [];\r\n                                        selectedData[field.name] = [];\r\n                                    }                                    \r\n                                }else{\r\n                                    var selectedID = '';\r\n                                    var selectedRow = [];\r\n                                    for(var i=0;i<field.dataProvider.length;i++){\r\n                                        if(field.dataProvider[i].id==values[field.name]){\r\n                                            selectedID = field.dataProvider[i].id;\r\n                                            selectedRow = [field.dataProvider[i]];\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    searchValue = selectedID;\r\n                                    selectedData[field.name] = selectedRow;\r\n                                }\r\n                                values[field.name] = searchValue;\r\n                            }\r\n\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...selectField}\r\n                                        disabled={disabled[field.name]}\r\n                                        select\r\n                                        value={values[field.name]}\r\n                                        onBlur={handleValidate(formBag, field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        onFocus={handleSearchFocus(field)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        SelectProps={selectProps}>\r\n                                        {selectedData[field.name].map(option => (\r\n                                            <MenuItem key={fns(field.name)+'-'+option.id+'-option'} selected={option.id==values[field.name]} value={option.id}>{option.name}</MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                            </Grid>;\r\n                        }else if(field.cmp=='select'){\r\n                            var selectField = {...field};\r\n                            delete selectField.dataProvider;\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)} {...selectField}\r\n                                        disabled={disabled[field.name]}\r\n                                        select\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        onBlur={handleValidate(formBag, field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        onFocus={handleClearErrors(field.name)}>\r\n                                        {field.dataProvider.map(option => (\r\n                                            <MenuItem key={fns(field.name)+'-'+option.id+'-option'} value={option.id}>{option.name}</MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                            </Grid>;\r\n                        }else if(field.cmp=='fileupload'){\r\n                            var fileUploadField = {...field};\r\n                            delete fileUploadField.accept;\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                <input id={fns(field.name)+'-file'} name={field.name+'-file'} type=\"file\" accept={field.accept} className={classes.menuButtonHidden} onChange={handleFileUploadChange(field.name)}/>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...fileUploadField}\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        onBlur={handleValidate(formBag, field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        InputProps={{\r\n                                            readOnly:true,\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    edge=\"end\"\r\n                                                    aria-label=\"select a file\" onClick={handleFileUploadClick(field.name)} disableFocusRipple={disabled[field.name]} disabled={disabled[field.name]} disableRipple={disabled[field.name]}>\r\n                                                    <AttachFileIcon color={colorIcon(field.name,'primary')}/>\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                        }}\r\n                                        onFocus={handleClearErrors(field.name)}\r\n                                    />\r\n                            </Grid>;\r\n                        }else if(field.cmp=='checkbox'){\r\n                            var switchField = {...field};\r\n                            delete switchField.dataProvider;\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...switchField}\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        InputProps={{\r\n                                            readOnly:true,\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    edge=\"end\"\r\n                                                    aria-label=\"checkbox\" onClick={handleCheckBoxClick(field.name)} disabled={disabled[field.name]} disableRipple={disabled[field.name]}>\r\n                                                    {\r\n                                                        values[field.name]==checkDPData[field.name][1].id ? <CheckBoxIcon color={colorIcon(field.name,'primary')}/> : <CheckBoxOutlineBlankIcon color={colorIcon(field.name,'primary')}/>\r\n                                                    }\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                        }}\r\n                                        onFocus={handleClearErrors(field.name)}\r\n                                    />\r\n                            </Grid>;                               \r\n                        }else if(field.cmp=='toggle'){\r\n                            var switchField = {...field};\r\n                            delete switchField.dataProvider;\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...switchField}\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        InputProps={{\r\n                                            readOnly:true,\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <Switch \r\n                                                        disabled={disabled[field.name]} \r\n                                                        checked={values[field.name]==checkDPData[field.name][0].id} \r\n                                                        onChange={handleCheckBoxClick(field.name)} \r\n                                                        inputProps={{ 'aria-label': 'toggle' }}\r\n                                                        color={colorIcon(field.name,'primary')}\r\n                                                    /> \r\n                                                </InputAdornment>\r\n                                            )\r\n                                        }}\r\n                                        onFocus={handleClearErrors(field.name)}\r\n                                    />\r\n                            </Grid>;        \r\n                        }else if(field.cmp=='datepicker'){\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <KeyboardDatePicker\r\n                                        id={fns(field.name)}\r\n                                        {...field}\r\n                                        autoOk\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        InputAdornmentProps={{ position: \"end\" }}\r\n                                        onChange={date => handleDateChange(field.name, date)}\r\n                                        onFocus={handleClearErrors(field.name)}\r\n                                    />                                \r\n                            </Grid>;        \r\n                        }else if(field.cmp=='hidden'){\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} style={{display:'none'}}><Input\r\n                                type=\"hidden\"\r\n                                value={values[field.name]}\r\n                                onChange={handleChange(field.name)}\r\n                            /></Grid>;\r\n                        }else if(field.cmp=='file' || field.cmp=='number' || field.cmp=='date' || field.cmp=='datetime-local' || field.cmp=='month' || field.cmp=='time' || field.cmp=='week'){\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...field}\r\n                                        type={field.cmp}\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        onBlur={handleValidate(formBag, field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        onFocus={handleClearErrors(field.name)}/>\r\n                            </Grid>;\r\n                        }else if(field.cmp=='inputmask'){\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...field}\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        onBlur={handleValidate(formBag, field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputProps={{\r\n                                            inputComponent:<MaskedInput mask={field.mask} placeholderChar={'\\u2000'} showMask/>\r\n                                        }}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        onFocus={handleClearErrors(field.name)}/>\r\n                            </Grid>;\r\n                        }else if(field.cmp=='text'){\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <Input\r\n                                        type=\"hidden\"\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                    />\r\n                                    <Typography {...field}>{values[field.name]}</Typography>\r\n                            </Grid>;                            \r\n                        }else if(field.cmp=='button'){\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <Input\r\n                                        type=\"hidden\"\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                    />\r\n                                    <Button {...field} disabled={disabled[field.name]}>{values[field.name]}</Button>\r\n                            </Grid>;                                                      \r\n                        }else{\r\n                            return <Grid key={fns(field.name)+'-griditem'} item {...field.grid} className={boxVisible(field.name)}>\r\n                                    <TextField\r\n                                        id={fns(field.name)}\r\n                                        {...field}\r\n                                        disabled={disabled[field.name]}\r\n                                        value={values[field.name]}\r\n                                        onChange={handleChange(field.name)}\r\n                                        onBlur={handleValidate(formBag, field.name)}\r\n                                        error={getError(field.name)!=''}\r\n                                        helperText={getError(field.name)}\r\n                                        InputLabelProps={{shrink: true}}\r\n                                        onFocus={handleClearErrors(field.name)}/>\r\n                            </Grid>;\r\n                        }\r\n                    })\r\n                }\r\n                {formBag.isSubmitting && <Grid key={fns('line')+'-progress-griditem'} item xs={12}><LinearProgress /></Grid>}\r\n                {\r\n                    mapping.buttons && mapping.buttons.map((item, key) => {\r\n                        item.className = classes[item.cls];\r\n                        if(item.onClick){\r\n                            var clickEvent = item.onClick;\r\n                            item.onClick = () => {\r\n                                clickEvent(item.label,formBag);\r\n                            };\r\n                        }\r\n                        if(!item.grid){\r\n                            item.grid = {xs:12};\r\n                        }\r\n                        if(!item.grid.xs){\r\n                            item.grid.xs = 12;\r\n                        }                        \r\n                        if(item.fullWidth==undefined) item.fullWidth = true;\r\n\r\n                        return <Grid key={fns(item.label)+'-button-griditem'} item {...item.grid}><Button {...item} disabled={formBag.isSubmitting}>{item.label}</Button></Grid>;\r\n                    })\r\n                }\r\n        </Grid>      \r\n        }\r\n    </form>;\r\n\r\n}\r\n","import React from 'react';\r\nexport default function Spacer(props) {\r\n    return <br/>;\r\n}","import React, { useEffect, useRef, useState } from 'react';\nimport useStateWithCallback from 'use-state-with-callback';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\n\nimport SimpleForm from '~app-src/component/SimpleForm';\nimport Spacer from '~app-src/component/Spacer';\n\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport Slide from '@material-ui/core/Slide';\n\nexport default function LoginForm({ app, name, router }) {\n  const classes = app.getStyles();\n  const formName = name;\n  const ref = useRef();\n  const [enter, setEnter] = useState(false);\n  const [state, setState] = useState({});\n  const control = app.createControl(ref, state, formName);\n  useEffect(() => {\n    let isSubscribed = true;\n    app.registerForm(formName, control);\n    app.delay(() => {\n      if (isSubscribed) {\n        setEnter(true);\n      }\n    }, 1000);\n    return () => {\n      isSubscribed = false;\n      app.unregisterForm(formName);\n    };\n  }, []);\n\n  return (\n    <Slide in={enter} direction='down'>\n      <Container component='main' maxWidth='xs' ref={ref}>\n        <Spacer />\n        <Card className={classes.titlecard}>\n          <CardContent className={classes.paperCenter}>\n            <Typography component='h1' variant='h5'>\n              Sign in\n            </Typography>\n\n            <SimpleForm\n              name={formName}\n              formKey='login-form'\n              control={control}\n              app={app}\n              mapping={{\n                schema: rule => {\n                  return {\n                    username: rule.string().required(),\n                    password: rule.string().required()\n                  };\n                },\n                fields: [\n                  {\n                    name: 'username',\n                    label: 'Username',\n                    cmp: 'textfield',\n                    autoFocus: true\n                  },\n                  {\n                    name: 'password',\n                    label: 'Password',\n                    cmp: 'textfield',\n                    type: 'password'\n                  }\n                ],\n                onSubmit: (values, formCtrl) => {\n                  if (formCtrl.isValid()) {\n                    app.service.post(\n                      '/bean/token',\n                      { email: values.username, password: values.password },\n                      p => {\n                        formCtrl.setSubmitting(false);\n                        if (p.success) {\n                          setEnter(false);\n                          app.delay(() => {\n                            app.setUser(p.result);\n                          }, 500);\n                        } else {\n                          app.alert(p.message);\n                        }\n                      }\n                    );\n                  } else {\n                    //formCtrl.setSubmitting(false);\n                  }\n                  formCtrl.setSubmitting(false);\n                },\n                buttons: [\n                  {\n                    type: 'submit',\n                    label: 'Login',\n                    variant: 'contained',\n                    color: 'primary'\n                  }\n                ]\n              }}\n              state={state}\n              setState={setState}\n            ></SimpleForm>\n          </CardContent>\n        </Card>\n      </Container>\n    </Slide>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Spacer from '~app-src/component/Spacer';\n\nexport default function HomeForm({ app, name, router }) {\n  const classes = app.getStyles();\n  const formName = name;\n  const ref = useRef();\n  const [state, setState] = useState({});\n  const control = app.createControl(ref, state, name);\n\n  useEffect(() => {\n    app.registerForm(formName, control);\n    return () => {\n      app.unregisterForm(formName);\n    };\n  }, []);\n\n  return (\n    <Container component='main' ref={ref}>\n      <Spacer />\n      <Card className={classes.titlecard}>\n        <CardContent>\n          <CardMedia\n            className={classes.titlecardmedia}\n            image='/HerzoProforma/media/front-welcome.jpg'\n            title='Proforma App'\n          />\n          <Typography gutterBottom variant='h5' component='h2'>\n            Welcome to the PulseFeed Admin App\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            Your credible source of medical news, self-help information, health\n            tips and more!\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            size='small'\n            color='primary'\n            onClick={() => {\n              router.history.push('/proforma/list');\n            }}\n          >\n            Start\n          </Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n}\n","import React, { forwardRef, useState, useEffect } from 'react';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport Save from '@material-ui/icons/Save';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\nexport default function SimpleTable(props) {\r\n    const {tableKey, name, app, control, columns, data, options, actions} = props;\r\n    const tableProps = {...props};\r\n    delete tableProps.tableKey;\r\n    delete tableProps.name;\r\n    delete tableProps.app;\r\n    delete tableProps.control;\r\n\r\n    tableProps.title = '';\r\n    tableProps.options = { \r\n        ...props.options,\r\n        showTitle: false,\r\n        toolbar: false,\r\n        headerStyle: {\r\n            padding: 0,\r\n            margin: 0\r\n        }\r\n    };    \r\n\r\n    const classes = app.getStyles();\r\n    const tableBag = {\r\n        name:name,\r\n        tableKey:(tableKey) ? tableKey: app.makeKey()\r\n    };\r\n    \r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Save: forwardRef((props, ref) => <Save {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    const aliasIcons = {\r\n        Add: AddBox,\r\n        Check: Check,\r\n        Clear: Clear,\r\n        Delete: DeleteOutline,\r\n        DetailPanel: ChevronRight,\r\n        Edit: Edit,\r\n        Export: SaveAlt,\r\n        Filter: FilterList,\r\n        FirstPage: FirstPage,\r\n        LastPage: LastPage,\r\n        NextPage: ChevronRight,\r\n        PreviousPage: ChevronLeft,\r\n        ResetSearch: Clear,\r\n        Save: Save,\r\n        Search: Search,\r\n        SortArrow: ArrowUpward,\r\n        ThirdStateCheck: Remove,\r\n        ViewColumn: ViewColumn\r\n    };    \r\n    const [rendered, setRendered] = useState(false);\r\n    const [refreshTable, setRefreshTable] = useStateWithCallback(true,(flag)=>{\r\n        if(rendered && flag==false){\r\n            console.log('redrawing...');\r\n            setRefreshTable(true);\r\n        }\r\n    });\r\n\r\n    if(actions){\r\n        // actions.map((action, index) => {\r\n        //     action.icon = aliasIcons[action.icon];\r\n        // });\r\n        // tableProps.actions = actions;\r\n    }\r\n\r\n    tableBag.tableRef = React.createRef();\r\n    tableBag.refresh = () => {\r\n        console.log('refresh called!');\r\n        if(tableBag.tableRef.current){\r\n            tableBag.tableRef.current.onQueryChange();\r\n        }else{\r\n            setRefreshTable(false);\r\n        }\r\n    };\r\n    \r\n    useEffect(()=>{\r\n        setRendered(true);\r\n        control.addTable(tableBag);\r\n        return () => {\r\n        }\r\n    },[]);\r\n\r\n    return <div>\r\n        {rendered && refreshTable && <MaterialTable tableRef={tableBag.tableRef} icons={tableIcons} {...tableProps}/>}\r\n    </div>;\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SimpleForm from '~app-src/component/SimpleForm';\r\nimport Spacer from '~app-src/component/Spacer';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\n\r\nexport default function ProformaRequestForm({\r\n  app,\r\n  name,\r\n  router,\r\n  mode,\r\n  rowData,\r\n  providers\r\n}) {\r\n  const classes = app.getStyles();\r\n  const formName = name;\r\n  const ref = useRef();\r\n  const [state, setState] = useState(\r\n    mode == 'update' ? rowData : { status_id: 'requested' }\r\n  );\r\n  const control = app.createControl(ref, state, formName);\r\n\r\n  useEffect(() => {\r\n    console.log('rowData', rowData);\r\n    app.registerForm(formName, control);\r\n    return () => {\r\n      app.unregisterForm(formName);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs' ref={ref}>\r\n      <Spacer />\r\n      <Card className={classes.titlecard}>\r\n        <CardHeader\r\n          action={\r\n            <IconButton\r\n              aria-label='tools'\r\n              onClick={() => {\r\n                app.service.download('/bean/template/packinglist', {});\r\n              }}\r\n            >\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          }\r\n          title='Post Request'\r\n        />\r\n        <CardContent className={classes.paperCenter}>\r\n          <SimpleForm\r\n            name={formName}\r\n            formKey='request-form'\r\n            control={control}\r\n            app={app}\r\n            mapping={{\r\n              schema: rule => {\r\n                return {\r\n                  packinglistfile: rule.string().required('field is required'),\r\n                  deliveryaddress1: rule.string(),\r\n                  deliveryaddress2: rule.string(),\r\n                  deliveryaddress3: rule.string(),\r\n                  deliveryaddress4: rule.string(),\r\n                  deliveryaddress5: rule.string(),\r\n                  termsofdelivery: rule.string(),\r\n                  shipper: rule.string(),\r\n                  pickuplocation: rule.string(),\r\n                  remarks: rule.string(),\r\n                  status_id: rule.string()\r\n                };\r\n              },\r\n              fields: [\r\n                { name: 'id', cmp: 'hidden' },\r\n                {\r\n                  name: 'packinglistfile',\r\n                  label: 'Media File',\r\n                  cmp: 'fileupload'\r\n                },\r\n                { name: 'packinglisthash', label: '', cmp: 'hidden' },\r\n                {\r\n                  name: 'deliveryaddress1',\r\n                  label: 'Caption',\r\n                  cmp: 'textfield'\r\n                },\r\n                {\r\n                  name: 'deliveryaddress2',\r\n                  label: 'Title',\r\n                  cmp: 'textfield'\r\n                },\r\n                {\r\n                  name: 'deliveryaddress3',\r\n                  label: 'Content',\r\n                  cmp: 'textfield'\r\n                },\r\n                {\r\n                  name: 'deliveryaddress4',\r\n                  label: 'Links',\r\n                  cmp: 'textfield'\r\n                },\r\n                {\r\n                  name: 'deliveryaddress5',\r\n                  label: 'Tags',\r\n                  cmp: 'textfield'\r\n                },\r\n                { name: 'invoicedate', label: 'Post Date', cmp: 'textfield' },\r\n                { name: 'remarks', label: 'Remarks', cmp: 'textfield' },\r\n                {\r\n                  name: 'status_id',\r\n                  label: 'Status',\r\n                  cmp: 'search',\r\n                  dataProvider: providers.statusProvider,\r\n                  disabled: true\r\n                }\r\n              ],\r\n              onSubmit: (values, formCtrl) => {\r\n                console.log(formCtrl.isValid());\r\n                formCtrl.setSubmitting(true);\r\n                var vo = app.getForm(formName).getFormValues();\r\n                vo.requestedon = app.moment(new Date()).format('YYYY-MM-DD');\r\n                var data = vo;\r\n                if (formCtrl.isValid()) {\r\n                  if (mode == 'update') {\r\n                    data = app.getForm(formName).getFormData(vo);\r\n                    app.service.upload('/bean/update/proforma', data, p => {\r\n                      formCtrl.setSubmitting(false);\r\n                      if (p.success) {\r\n                        app.notice.info(p.message);\r\n                        app.sideHandle.close();\r\n                      } else {\r\n                        app.alert(p.message);\r\n                      }\r\n                    });\r\n                  } else if (mode == 'create') {\r\n                    delete vo.id;\r\n                    data = app.getForm(formName).getFormData(vo);\r\n                    app.service.upload('/bean/create/proforma', data, p => {\r\n                      formCtrl.setSubmitting(false);\r\n                      if (p.success) {\r\n                        app.notice.info(p.message);\r\n                        app.sideHandle.close();\r\n                      } else {\r\n                        app.alert(p.message);\r\n                      }\r\n                    });\r\n                  } else {\r\n                    app.sideHandle.close();\r\n                  }\r\n                } else {\r\n                  formCtrl.setSubmitting(false);\r\n                }\r\n              },\r\n              buttons: [\r\n                {\r\n                  type: 'submit',\r\n                  label: 'Save',\r\n                  variant: 'contained',\r\n                  color: 'primary'\r\n                }\r\n              ]\r\n            }}\r\n            state={state}\r\n            setState={setState}\r\n          ></SimpleForm>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, forwardRef } from 'react';\n\nimport SimpleForm from '~app-src/component/SimpleForm';\nimport SimpleTable from '~app-src/component/SimpleTable';\nimport Spacer from '~app-src/component/Spacer';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport Paper from '@material-ui/core/Paper';\nimport ProformaRequestForm from '~app-src/module/proforma/ProformaRequestForm';\n\nexport default function ProformaAppForm({ app, name, router }) {\n  const classes = app.getStyles();\n  const formName = name;\n  const ref = useRef();\n  const [state, setState] = useState({});\n  const control = app.createControl(ref, state, formName);\n\n  const [statusProvider, setStatusProvider] = useState([]);\n\n  useEffect(() => {\n    var isSubscribed = true;\n    app.registerForm(formName, control);\n    if (isSubscribed) {\n      app.service.get('/bean/find/status', p => {\n        if (p.success) {\n          setStatusProvider(p.result);\n        }\n      });\n    }\n    return () => {\n      isSubscribed = false;\n      app.unregisterForm(formName);\n    };\n  }, []);\n\n  return (\n    <Container component='main' ref={ref}>\n      <Spacer />\n      <Paper elevation={1} className={classes.paper}>\n        <Typography component='h1' variant='h5'>\n          Your Post Requests\n        </Typography>\n        <Spacer />\n        <SimpleForm\n          name={formName}\n          formKey='proformalist-form'\n          control={control}\n          app={app}\n          mapping={{\n            schema: rule => {\n              return {\n                status: rule.string()\n              };\n            },\n            fields: [],\n            onSubmit: (values, formCtrl) => {\n              if (formCtrl.isValid()) {\n                app\n                  .getForm(formName)\n                  .findTable('proformalist-grid')\n                  .refresh();\n              }\n              formCtrl.setSubmitting(false);\n            },\n            buttons: [\n              {\n                label: 'Search',\n                variant: 'contained',\n                color: 'primary',\n                type: 'submit',\n                grid: { sm: 2 }\n              },\n              {\n                label: 'Create',\n                variant: 'contained',\n                color: 'primary',\n                grid: { sm: 2 },\n                onClick: (action, formCtrl) => {\n                  app.side({\n                    onRender: () => {\n                      return (\n                        <ProformaRequestForm\n                          name='app.proforma.ProformaRequestForm'\n                          app={app}\n                          router={router}\n                          mode='create'\n                          providers={{ statusProvider }}\n                        />\n                      );\n                    },\n                    onClose: () => {\n                      app\n                        .getForm(formName)\n                        .findTable('proformalist-grid')\n                        .refresh();\n                    }\n                  });\n                }\n              }\n            ]\n          }}\n        ></SimpleForm>\n      </Paper>\n      <Spacer />\n      <SimpleTable\n        app={app}\n        name={formName}\n        control={control}\n        tableKey='proformalist-grid'\n        columns={[{ title: 'Date Requested', field: 'requestedon' }]}\n        options={{\n          padding: 'dense',\n          sorting: true,\n          pageSize: 5,\n          pageSizeOptions: [5, 10, 25],\n          paging: true,\n          search: false\n        }}\n        data={query =>\n          app.service.promise((resolve, reject) => {\n            console.log('loading data');\n            var values = app.getForm(formName).getSearchValues();\n            var data = app.service.prepQuery(query, values);\n            app.service.post('/bean/search/proforma', data, p => {\n              if (p.success) {\n                resolve(app.service.prepResult(query, p));\n              } else {\n                reject();\n              }\n            });\n          })\n        }\n        actions={[\n          {\n            icon: app.icons.Edit,\n            tooltip: 'Edit',\n            onClick: (event, rowData) => {\n              app.side({\n                onRender: () => {\n                  var data = { ...rowData };\n                  console.log(data);\n                  delete data.tableData;\n                  return (\n                    <ProformaRequestForm\n                      name='app.proforma.ProformaRequestForm'\n                      app={app}\n                      router={router}\n                      mode='update'\n                      rowData={data}\n                      providers={{ statusProvider }}\n                    />\n                  );\n                },\n                onClose: () => {\n                  console.log('refreshing');\n                  app\n                    .getForm(formName)\n                    .findTable('proformalist-grid')\n                    .refresh();\n                }\n              });\n            }\n          },\n          {\n            icon: app.icons.Assignment,\n            tooltip: 'Packinglist File',\n            onClick: (event, rowData) => {\n              app.service.download(rowData.packinglistfile);\n            }\n          },\n          {\n            icon: app.icons.ViewList,\n            tooltip: 'Processed Packinglist File',\n            onClick: (event, rowData) => {\n              app.service.download(\n                '/bean/extract/packinglist?data=' +\n                  JSON.stringify({ proforma_id: rowData.id })\n              );\n            }\n          },\n          {\n            icon: app.icons.ViewList,\n            tooltip: 'Packinglist Report',\n            onClick: (event, rowData) => {\n              app.service.download(\n                '/bean/export/proformareport?data=' +\n                  JSON.stringify({ proforma_id: rowData.id })\n              );\n            }\n          },\n          {\n            icon: app.icons.Delete,\n            tooltip: 'Delete',\n            onClick: (event, rowData) => {\n              app.ask('You want to delete ' + rowData.name, reply => {\n                if (reply == 'yes') {\n                  app.service.get('/bean/remove/proforma/' + rowData.id, p => {\n                    if (p.success) {\n                      app.notice.warning(p.message);\n                      app\n                        .getForm(formName)\n                        .findTable('proformalist-grid')\n                        .refresh();\n                    } else {\n                      app.alert(p.message);\n                    }\n                  });\n                }\n              });\n            }\n          }\n        ]}\n        onRowClick={(event, rowData, togglePanel) => {\n          /*var formCtrl = app.getForm(formName);\n          formCtrl.setValues(rowData);\n          formCtrl.validate();*/\n        }}\n      />\n      <Spacer />\n    </Container>\n  );\n}\n","import React, { useEffect } from 'react';\r\n\r\nimport LoginForm from '~app-src/module/core/LoginForm';\r\nimport HomeForm from '~app-src/module/core/HomeForm';\r\n\r\nimport ProformaAppForm from '~app-src/module/proforma/ProformaAppForm';\r\n\r\nexport default class CoreRouter{\r\n    static sharedInstance = CoreRouter.sharedInstance == null ? new CoreRouter() : this.sharedInstance;\r\n\r\n    componentList = [\r\n        {\r\n            'path':'/',\r\n            'component':(app, router) => {\r\n                return <HomeForm name=\"app.core.HomeForm\" app={app} router={router}/>\r\n            }\r\n        },\r\n        {\r\n            'path':'/proforma/list',\r\n            'component':(app, router) => {\r\n                return <ProformaAppForm name=\"app.proforma.ProformaAppForm\" app={app} router={router}/>\r\n            }\r\n        }\r\n    ];\r\n\r\n    componentMap = {};\r\n\r\n    constructor(){\r\n        this.componentList.map((field, index) => {\r\n            this.componentMap[field.path] = field;\r\n        });\r\n    }\r\n\r\n    getComponent(isAuthenticated, field, app, router){\r\n        if(isAuthenticated){\r\n            return field.component(app, router);\r\n        }else{\r\n            return <LoginForm name=\"app.core.LoginForm\" app={app} router={router} />;\r\n        }\r\n    }\r\n\r\n    getPaths(){\r\n        return this.componentList;\r\n    }\r\n\r\n    static getInstance(){\r\n        return CoreRouter.sharedInstance;\r\n    }\r\n\r\n}","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SaveIcon from '@material-ui/icons/Save';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ViewColumnIcon from '@material-ui/icons/ViewColumn';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\n\nimport useStyles from '~app-src/module/core/CoreStyles';\n\nimport AppController from '~app-src/component/AppController';\nimport AppAlert from '~app-src/component/AppAlert';\nimport SideDrawer from '~app-src/component/SideDrawer';\nimport SelectPopover from '~app-src/component/SelectPopover';\nimport PreviewFrame from '~app-src/component/PreviewFrame';\n\nimport NavigationForm from '~app-src/module/core/NavigationForm';\nimport CoreRouter from '~app-src/module/core/CoreRouter';\n\nimport shortid from 'shortid';\n\nimport { useSnackbar } from 'notistack';\n\nimport CryptoJS from 'crypto-js';\nimport moment from 'moment';\n\nexport default function Viewport() {\n  const classes = useStyles();\n\n  const [rendered, setRendered] = React.useState(false);\n  const [appDrawerIsOpen, setAppDrawerIsOpen] = React.useState(false);\n  const [appIsAuthenticated, setAppIsAuthenticated] = React.useState(false);\n  const [appUser, setAppUser] = React.useState({ role_id: 'g' });\n\n  const handleDrawerOpen = () => {\n    setAppDrawerIsOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setAppDrawerIsOpen(false);\n  };\n  const { enqueueSnackbar } = useSnackbar();\n  const pushNotice = (variant, message) => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar(message, {\n      variant,\n      autoHideDuration: 2000,\n      disableWindowBlurListener: true\n    });\n  };\n\n  const appProp = (name, config) => {\n    if (\n      AppController.getInstance() &&\n      AppController.getInstance().getApp() &&\n      AppController.getInstance().getApp()[name]\n    ) {\n      return AppController.getInstance().getApp()[name];\n    } else {\n      return config ? config : {};\n    }\n  };\n\n  const app = AppController.getInstance().setApp({\n    forms: appProp('forms'),\n    controlCache: appProp('controlCache', {}),\n    stateCache: appProp('stateCache', {}),\n    alertHandle: appProp('alertHandle'),\n    sideHandle: appProp('sideHandle'),\n    popSelectHandle: appProp('popSelectHandle'),\n    icons: appProp('icons', {\n      Add: AddBoxIcon,\n      Assignment: AssignmentIcon,\n      Check: CheckIcon,\n      Clear: ClearIcon,\n      Delete: DeleteOutlineIcon,\n      DetailPanel: ChevronRightIcon,\n      Edit: EditIcon,\n      Export: SaveAltIcon,\n      Filter: FilterListIcon,\n      FirstPage: FirstPageIcon,\n      LastPage: LastPageIcon,\n      Menu: MenuIcon,\n      NextPage: ChevronRightIcon,\n      PictureAsPdf: PictureAsPdfIcon,\n      PreviousPage: ChevronLeftIcon,\n      ResetSearch: ClearIcon,\n      Save: SaveIcon,\n      Search: SearchIcon,\n      SortArrow: ArrowUpwardIcon,\n      ThirdStateCheck: RemoveIcon,\n      ViewColumn: ViewColumnIcon,\n      ViewList: ViewListIcon\n    }),\n    makeKey: () => {\n      return shortid.generate();\n    },\n    notice: {\n      success: message => {\n        pushNotice('success', message);\n      },\n      error: message => {\n        pushNotice('error', message);\n      },\n      warning: message => {\n        pushNotice('warning', message);\n      },\n      info: message => {\n        pushNotice('info', message);\n      }\n    },\n    createControl: (component, state, name) => {\n      if (name && app.controlCache[name]) return app.controlCache[name];\n      let _self = {\n        name: '',\n        component: component,\n        state: state,\n        tables: [],\n        values: {},\n        files: {},\n        visibles: {},\n        selectedCache: {},\n        errors: {},\n        disabled: {},\n        currentStep: '',\n        forms: []\n      };\n      _self.findForm = key => {\n        for (var i = 0; i < _self.forms.length; i++) {\n          if (_self.forms[i].formKey == key) {\n            return _self.forms[i];\n          }\n        }\n      };\n      _self.findTable = key => {\n        for (var i = 0; i < _self.tables.length; i++) {\n          if (_self.tables[i].tableKey == key) {\n            return _self.tables[i];\n          }\n        }\n      };\n      var ctrl = {\n        setCurrentStep: name => {\n          _self.currentStep = name;\n        },\n        setName: name => {\n          _self.name = name;\n        },\n        getComponent: () => {\n          return _self.component;\n        },\n        addForm: control => {\n          for (var i = 0; i < _self.forms.length; i++) {\n            if (control.formKey == _self.forms[i].formKey) {\n              _self.forms.splice(i, 1);\n            }\n          }\n          _self.forms.push(control);\n        },\n        addTable: control => {\n          for (var i = 0; i < _self.tables.length; i++) {\n            if (control.tableKey == _self.tables[i].tableKey) {\n              _self.tables.splice(i, 1);\n            }\n          }\n          _self.tables.push(control);\n        },\n        getForm: index => {\n          if (index == undefined) {\n            index = 0;\n          }\n          return _self.forms[index];\n        },\n        getForms: () => {\n          return _self.forms;\n        },\n        findForm: key => {\n          return _self.findForm(key);\n        },\n        getTable: index => {\n          if (index == undefined) {\n            index = 0;\n          }\n          return _self.tables[index];\n        },\n        getTables: () => {\n          return _self.tables;\n        },\n        findTable: key => {\n          return _self.findTable(key);\n        },\n        cacheFormFiles: (key, files) => {\n          _self.files[key] = files;\n        },\n        cacheFormValues: (key, values) => {\n          _self.values[key] = values;\n        },\n        cacheFormErrors: (key, errors) => {\n          _self.errors[key] = errors;\n        },\n        cacheFormVisibles: (key, data) => {\n          _self.visibles[key] = data;\n        },\n        cacheFormDisabled: (key, data) => {\n          _self.disabled[key] = data;\n        },\n        cacheSelectedData: (key, data) => {\n          _self.selectedCache[key] = data;\n        },\n        getSelectedCache: key => {\n          return _self.selectedCache[key];\n        },\n        getError: (key, fieldName) => {\n          if (_self.errors[key] && _self.errors[key][fieldName]) {\n            return _self.errors[key][fieldName];\n          } else {\n            return '';\n          }\n        },\n        getDisabled: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) key = _self.forms[0].formKey;\n          return _self.disabled[key];\n        },\n        isDisabled: (key, fieldName) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (_self.disabled[key] && _self.disabled[key][fieldName]) {\n            return _self.disabled[key][fieldName];\n          } else {\n            return false;\n          }\n        },\n        getVisibles: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) key = _self.forms[0].formKey;\n          return _self.visibles[key];\n        },\n        isVisible: (key, fieldName) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (_self.visibles[key] && _self.visibles[key][fieldName]) {\n            return _self.visibles[key][fieldName];\n          } else {\n            return false;\n          }\n        },\n        getErrors: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) key = _self.forms[0].formKey;\n          return _self.errors[key];\n        },\n        getValues: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) key = _self.forms[0].formKey;\n          return _self.values[key];\n        },\n        getFormValues: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) key = _self.forms[0].formKey;\n          var formValues = { ..._self.values[key] };\n          for (var i in formValues) {\n            if (Array.isArray(formValues[i])) {\n              formValues[i] = formValues[i].join(',');\n            }\n          }\n          return formValues;\n        },\n        getFormData: (data, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            return _self.forms[0].getFormData(data);\n          } else {\n            return _self.findForm(key).getFormData(data);\n          }\n        },\n        getSearchValues: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) key = _self.forms[0].formKey;\n\n          var formValues = { ..._self.values[key] };\n          for (var i in formValues) {\n            if (Array.isArray(formValues[i])) {\n              formValues[i] = formValues[i].join(',');\n            }\n            if (formValues[i].trim() == '') {\n              delete formValues[i];\n            }\n          }\n          return formValues;\n        },\n        show: (flag, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].show(flag);\n          } else {\n            _self.findForm(key).show(flag);\n          }\n        },\n        setVisibles: (data, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].setVisibles(data);\n          } else {\n            _self.findForm(key).setVisibles(data);\n          }\n        },\n        setVisible: (fieldName, flag, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].setVisible(fieldName, flag);\n          } else {\n            _self.findForm(key).setVisible(fieldName, flag);\n          }\n        },\n        disable: (flag, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].disable(flag);\n          } else {\n            _self.findForm(key).disable(flag);\n          }\n        },\n        setDisables: (data, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].setDisables(data);\n          } else {\n            _self.findForm(key).setDisables(data);\n          }\n        },\n        setDisabled: (fieldName, flag, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].setDisabled(fieldName, flag);\n          } else {\n            _self.findForm(key).setDisabled(fieldName, flag);\n          }\n        },\n        setValue: (fieldName, value, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].setValue(fieldName, value);\n          } else {\n            _self.findForm(key).setValue(fieldName, value);\n          }\n        },\n        setValues: (values, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].setValues(values);\n          } else {\n            _self.findForm(key).setValues(values);\n          }\n        },\n        clearErrors: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].clearErrors();\n          } else {\n            _self.findForm(key).clearErrors();\n          }\n        },\n        refresh: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].refresh();\n          } else {\n            _self.findForm(key).refresh();\n          }\n        },\n        reset: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].reset();\n          } else {\n            _self.findForm(key).reset();\n          }\n        },\n        submit: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].submit();\n          } else {\n            _self.findForm(key).submit();\n          }\n        },\n        validate: key => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            _self.forms[0].validate();\n          } else {\n            _self.findForm(key).validate();\n          }\n        },\n        isValid: (flag, key) => {\n          if (!key && _self.currentStep && _self.currentStep != '')\n            key = _self.currentStep;\n          if (!key && _self.forms.length > 0) {\n            return _self.forms[0].isValid(flag);\n          } else {\n            return _self.findForm(key).isValid(flag);\n          }\n        }\n      };\n      if (name) app.controlCache[name] = ctrl;\n      return ctrl;\n    },\n    setStateCache: (key, values) => {\n      app.stateCache[key] = { ...app.stateCache[key], ...values };\n    },\n    getStateCache: key => {\n      return app.stateCache[key];\n    },\n    setPopSelectHandle: handle => {\n      app.popSelectHandle = handle;\n    },\n    setAlertHandle: handle => {\n      app.alertHandle = handle;\n    },\n    setSideHandle: handle => {\n      app.sideHandle = handle;\n    },\n    registerForm: (name, component) => {\n      AppController.getInstance().getApp().forms[name] = component;\n      console.log('loaded:', name, app.forms[name]);\n      app.forms[name].setName(name);\n      return app.forms[name];\n    },\n    getForm: name => {\n      if (AppController.getInstance().getApp().forms[name])\n        return app.forms[name];\n    },\n    unregisterForm: name => {\n      console.log('unloaded:', name);\n      delete AppController.getInstance().getApp().forms[name];\n    },\n    moment: moment,\n    service: {\n      promise: callback => {\n        return new Promise((resolve, reject) => {\n          callback(resolve, reject);\n        });\n      },\n      get: (path, callback) => {\n        fetch(window.BASE_APP_PATH + path)\n          .then(res => {\n            try {\n              return res.json();\n            } catch (e) {\n              return {\n                success: false,\n                message: e.message,\n                result: e\n              };\n            }\n          })\n          .then(p => {\n            callback(p);\n          });\n      },\n      post: (path, data, callback) => {\n        fetch(window.BASE_APP_PATH + path, {\n          method: 'POST',\n          mode: 'same-origin',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow',\n          referrer: 'no-referrer',\n          body: JSON.stringify(data)\n        })\n          .then(res => {\n            try {\n              return res.json();\n            } catch (e) {\n              return {\n                success: false,\n                message: e.message,\n                result: e\n              };\n            }\n          })\n          .then(p => {\n            callback(p);\n          });\n      },\n      upload: (path, data, callback) => {\n        fetch(window.BASE_APP_PATH + path, {\n          method: 'POST',\n          mode: 'same-origin',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type':\n              'multipart/form-data boundary=' +\n              Math.random()\n                .toString()\n                .substr(2)\n          },\n          redirect: 'follow',\n          referrer: 'no-referrer',\n          body: data\n        })\n          .then(res => {\n            try {\n              return res.json();\n            } catch (e) {\n              return {\n                success: false,\n                message: e.message,\n                result: e\n              };\n            }\n          })\n          .then(p => {\n            callback(p);\n          });\n      },\n      download: (path, data) => {\n        const link = document.createElement('a');\n        var url = window.BASE_APP_PATH + path;\n        if (data) {\n          url = url + '?data=' + JSON.stringify(data);\n        }\n        link.setAttribute('href', url);\n        link.setAttribute('target', '_blank');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      },\n      /*preview: (path, data) => {\n        app.side(\n          {\n            onRender: ()=>{ \n              return <PreviewFrame name=\"app.component.PreviewFrame\" app={app} router={router} src={window.BASE_APP_PATH+path+'?data='+JSON.stringify(data)} height=\"100%\" width=\"45%\"/> \n            },\n            onClose: ()=>{\n            }\n          }\n        );                \n      },*/\n      prepQuery: (query, obj) => {\n        obj['$paging'] = {\n          page: query.page,\n          start: query.page * query.pageSize,\n          limit: query.pageSize\n        };\n\n        if (query.orderBy != undefined) {\n          obj['$paging'].sort = query.orderBy.field;\n          obj['$paging'].dir = query.orderDirection.toUpperCase();\n        }\n        return obj;\n      },\n      prepResult: (query, p) => {\n        return {\n          data: p.result.records ? p.result.records : p.result,\n          page: query.page,\n          totalCount: p.result.records ? p.result.total : p.result.length\n        };\n      }\n    },\n    setUser: user => {\n      setAppIsAuthenticated(true);\n      setAppUser(user);\n    },\n    getStyles: () => {\n      return classes;\n    },\n    side: ctrl => {\n      AppController.getInstance()\n        .getApp()\n        .sideHandle.setState({\n          open: true,\n          onRender: ctrl.onRender,\n          onClose: ctrl.onClose\n        });\n    },\n    pop: (\n      type,\n      name,\n      label,\n      value,\n      dataProvider,\n      setPopoverTarget,\n      setPopoverCancel,\n      selectData,\n      multiSelect,\n      dataMap,\n      anchorEl\n    ) => {\n      var selectedIDs = {};\n      if (multiSelect) {\n        for (var i = 0; i < value.length; i++) {\n          selectedIDs[value[i]] = dataMap[value[i]];\n        }\n      } else {\n        for (var i = 0; i < dataProvider.length; i++) {\n          if (dataProvider[i].id == value) {\n            AppController.getInstance()\n              .getApp()\n              .popSelectHandle.setSelectedIndex(i);\n          }\n        }\n      }\n      AppController.getInstance()\n        .getApp()\n        .popSelectHandle.setState({\n          open: true,\n          type: type,\n          name: name,\n          label: label,\n          value: '',\n          lastValue: value,\n          multiSelect: multiSelect ? true : false,\n          selectedIDs: selectedIDs,\n          dataProvider: dataProvider,\n          setPopoverTarget: setPopoverTarget,\n          setPopoverCancel: setPopoverCancel,\n          selectData: selectData,\n          anchorEl: anchorEl\n        });\n    },\n    alert: (message, callback) => {\n      AppController.getInstance()\n        .getApp()\n        .alertHandle.setAppAlert({\n          title: 'Proforma App',\n          open: true,\n          type: 'ok',\n          message: message,\n          callback: callback\n        });\n    },\n    ask: (message, callback) => {\n      AppController.getInstance()\n        .getApp()\n        .alertHandle.setAppAlert({\n          title: 'Proforma App',\n          open: true,\n          type: 'yesno',\n          message: message,\n          callback: callback\n        });\n    },\n    delay: (cb, ms) => {\n      if (ms == undefined) ms = 1;\n      setTimeout(() => {\n        cb();\n      }, ms);\n    },\n    encrypt: secret => {\n      var key = CryptoJS.enc.Utf8.parse('^LsUgH7J8}t;{9bp');\n      var iv = CryptoJS.enc.Utf8.parse('F3ZAF]YNw6[44ZX8');\n      var encrypted = CryptoJS.AES.encrypt(secret, key, {\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n      });\n      return encrypted.toString();\n    }\n  });\n\n  useEffect(() => {\n    setRendered(true);\n    console.log('Viewport loaded');\n    return () => {\n      console.log('Viewport Unloaded');\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='absolute'\n        className={clsx(classes.appBar, appDrawerIsOpen && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          {appIsAuthenticated && (\n            <IconButton\n              edge='start'\n              color='inherit'\n              aria-label='Open drawer'\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                appDrawerIsOpen && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography\n            component='h1'\n            variant='h6'\n            color='inherit'\n            noWrap\n            className={classes.title}\n          >\n            PuleFeed Admin App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <HashRouter>\n        {appIsAuthenticated && (\n          <Drawer\n            variant='permanent'\n            classes={{\n              paper: clsx(\n                classes.drawerPaper,\n                !appDrawerIsOpen && classes.drawerPaperClose\n              )\n            }}\n            open={appDrawerIsOpen}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <Route\n              path='/'\n              component={router =>\n                appIsAuthenticated && appUser.role_id == 'R-01' ? (\n                  <NavigationForm app={app} router={router} user={appUser} />\n                ) : (\n                  <div></div>\n                )\n              }\n            />\n          </Drawer>\n        )}\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {CoreRouter.getInstance()\n            .getPaths()\n            .map((field, index) => {\n              return (\n                <Route\n                  key={app.makeKey()}\n                  exact\n                  path={field.path}\n                  component={router => {\n                    return CoreRouter.getInstance().getComponent(\n                      appIsAuthenticated,\n                      field,\n                      app,\n                      router\n                    );\n                  }}\n                />\n              );\n            })}\n        </main>\n      </HashRouter>\n      {rendered && <SideDrawer app={app} />}\n      {rendered && <SelectPopover app={app} />}\n      {rendered && <AppAlert app={app} />}\n    </div>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, grey, red } from '@material-ui/core/colors';\n\nconst rawTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#69696a',\n      main: '#28282a',\n      dark: '#1e1e1f',\n    },\n    secondary: {\n      light: '#fff5f8',\n      main: '#ff3366',\n      dark: '#e62958',\n    },\n    warning: {\n      main: '#ffc071',\n      dark: '#ffb25e',\n    },\n    error: {\n      xLight: red[50],\n      main: red[500],\n      dark: red[700],\n    },\n    success: {\n      xLight: green[50],\n      dark: green[700],\n    },\n  },\n  // typography: {\n  //   fontFamily: \"'Work Sans', sans-serif\",\n  //   fontSize: 14,\n  //   fontWeightLight: 300, // Work Sans\n  //   fontWeightRegular: 400, // Work Sans\n  //   fontWeightMedium: 700, // Roboto Condensed\n  //   fontFamilySecondary: \"'Roboto Condensed', sans-serif\",\n  // },  \n  typography: {\n    fontFamily: \"'FS Albert Web','Calibri','San Francisco Pro','Arial','sans-serif'\",\n    fontSize: 14,\n    fontWeightLight: 300, // Work Sans\n    fontWeightRegular: 400, // Work Sans\n    fontWeightMedium: 700, // Roboto Condensed\n    fontFamilySecondary: \"'FS Albert Web','SFMono-Regular','Menlo','Monaco','Consolas','Liberation Mono','Courier New','monospace'\",\n  },\n});\n\nconst fontHeader = {\n  color: rawTheme.palette.text.primary,\n  fontWeight: rawTheme.typography.fontWeightMedium,\n  fontFamily: rawTheme.typography.fontFamilySecondary,\n};\n\nconst theme = {\n  ...rawTheme,\n  palette: {\n    ...rawTheme.palette,\n    background: {\n      ...rawTheme.palette.background,\n      default: rawTheme.palette.common.white,\n      placeholder: grey[200],\n    },\n  },\n  typography: {\n    ...rawTheme.typography,\n    fontHeader,\n    h1: {\n      ...rawTheme.typography.h1,\n      ...fontHeader,\n      letterSpacing: 0,\n      fontSize: 60,\n    },\n    h2: {\n      ...rawTheme.typography.h2,\n      ...fontHeader,\n      fontSize: 48,\n    },\n    h3: {\n      ...rawTheme.typography.h3,\n      ...fontHeader,\n      fontSize: 42,\n    },\n    h4: {\n      ...rawTheme.typography.h4,\n      ...fontHeader,\n      fontSize: 36,\n    },\n    h5: {\n      ...rawTheme.typography.h5,\n      fontSize: 20,\n      fontWeight: rawTheme.typography.fontWeightLight,\n    },\n    h6: {\n      ...rawTheme.typography.h6,\n      ...fontHeader,\n      fontSize: 18,\n    },\n    subtitle1: {\n      ...rawTheme.typography.subtitle1,\n      fontSize: 18,\n    },\n    body1: {\n      ...rawTheme.typography.body2,\n      fontWeight: rawTheme.typography.fontWeightRegular,\n      fontSize: 16,\n    },\n    body2: {\n      ...rawTheme.typography.body1,\n      fontSize: 14,\n    },\n  },\n};\n\nexport default theme;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { SnackbarProvider } from 'notistack';\nimport Viewport from '~app-src/module/core/Viewport';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '~app-src/theme';\n\nconst styles = {\n};\n\nclass App extends Component {  \n\n  render() {\n\n    return <ThemeProvider theme={theme}>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <SnackbarProvider maxSnack={3}>\n    <div className=\"App\">\n      <Viewport></Viewport>\n    </div>\n    </SnackbarProvider>\n    </MuiPickersUtilsProvider>\n  </ThemeProvider>;\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '~app-src/index.css';\nimport App from '~app-src/App';\nimport * as serviceWorker from '~app-src/serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}